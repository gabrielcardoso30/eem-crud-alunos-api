// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220110142543_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Security.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaminhoFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataBloqueioPrimeiroAcesso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimeiroLogin")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeLogin")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadePrimeiroAcesso")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneResidencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TermoUso")
                        .HasColumnType("bit");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UnidadeAcessoSelecionada")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Core.Entities.Security.AspNetUsersRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AspNetUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AspNetUsersId");

                    b.ToTable("AspNetUsersRefreshToken");
                });

            modelBuilder.Entity("Core.Entities.Security.Auditoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AspNetUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entidade")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("EntityState")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("KeyValue")
                        .IsRequired()
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("NewValues")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OldValues")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ParentKeyValue")
                        .HasColumnType("varchar(4000)")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AspNetUsersId");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("Core.Entities.Security.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("Padrao")
                        .HasColumnType("bit");

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Grupo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Nome = "Administrador",
                            Padrao = false,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoAspNetUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AspNetUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AspNetUsersId");

                    b.HasIndex("GrupoId");

                    b.ToTable("GrupoAspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b61b8f1-a5c0-4281-9976-4992e93e3c93"),
                            AspNetUsersId = new Guid("97e7e460-fc41-4924-ac91-c1afe5813559"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoModulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("GrupoModulo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78cffbe4-d155-4b24-8abf-9df0f28aadf1"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            Modulo = "Configuracao"
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoUnidadeAcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeAcessoId");

                    b.ToTable("GrupoUnidadeAcesso");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78cffbe4-d155-4b24-8abf-9df0f28aadf1"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            UnidadeAcessoId = new Guid("a89ee7c9-01c5-4387-95ab-dfef58eac490")
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.ParametroSistema", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AspNetUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoParametro")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValor")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ValorBit")
                        .HasColumnType("bit");

                    b.Property<string>("ValorTexto")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AspNetUsersId");

                    b.ToTable("ParametroSistema");
                });

            modelBuilder.Entity("Core.Entities.Security.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Permissao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1f523a6-0217-44a8-a649-a0d1b22505c3"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Unidade de Acesso",
                            Nome = "ConsultarUnidadeAcesso",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b3ea5dcd-b6cf-48d5-90a3-6a0972cc72ad"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Unidade de Acesso",
                            Nome = "CadastrarUnidadeAcesso",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8490dc09-50cd-42d4-87c6-b70ec7e488d5"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Atualizar Unidade de Acesso",
                            Nome = "AtualizarUnidadeAcesso",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("71f80eef-d10e-41d2-a803-e5b0f563b0da"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Unidade de Acesso",
                            Nome = "DeletarUnidadeAcesso",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("460868e7-6b2b-4d8d-a56c-c096e236ddcd"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Usuario",
                            Nome = "ConsultarUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ec7d9981-5e78-4b3e-95f4-27958c0d4f66"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Usuario",
                            Nome = "CadastrarUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9382b87b-1401-4b51-bdfa-5bbaca41cb78"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Atualizar Usuário",
                            Nome = "AtualizarUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fd1324d8-5c31-4fdb-b629-b9755b3dc9ef"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Usuário",
                            Nome = "DeletarUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d4a39d1c-c7fd-41de-aa56-cf269f723002"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Resetar Senha do Usuário",
                            Nome = "ResetarSenhaUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7298e2ae-c46a-47ff-9ae5-d9620e0b288c"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Desbloquear Usuário",
                            Nome = "DesbloquearUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("68943f93-71af-4368-a57a-9f0b2d77f56e"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Associar Usuário a um Grupo",
                            Nome = "AssociarUsuarioGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("59666e7e-320f-44e2-9d14-97a131a78618"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Grupo",
                            Nome = "ConsultarGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1e7d4555-be2f-421f-9fee-7c22f4326b60"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Grupo",
                            Nome = "CadastrarGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f9114f1d-d1a0-4afa-b1bc-b8137a5b7640"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Atualizar Grupo",
                            Nome = "AtualizarGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ed2b7a70-90ae-44d4-b81e-506ef914c34c"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Grupo",
                            Nome = "DeletarGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("684fd917-ca64-47a2-b5ea-5cf801a36a93"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Permissões de Grupo",
                            Nome = "ConsultarPermissoesGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("36b7322e-42a9-4828-9d84-d0dbfac3e27d"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Permissão de Grupo",
                            Nome = "CadastrarPermissaoGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("4b31bfdb-790b-408e-b8d6-60397cb489c3"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Permissão de Grupo",
                            Nome = "DeletarPermissaoGrupo",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9bb40f14-1ea7-4c84-a3a8-48cffb7e921f"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Permissões de Usuário",
                            Nome = "ConsultarPermissoesUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1a31dfcf-234b-4745-9c3b-2f41bbd3021d"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Permissão de Usuário",
                            Nome = "CadastrarPermissaoUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1e8731b6-338d-4f3f-9ebb-045a2b18156a"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Permissão de Usuário",
                            Nome = "DeletarPermissaoUsuario",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f5c0ded7-355f-4026-9141-ad97e6f8ba5e"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Responsável",
                            Nome = "ConsultarResponsavel",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d13364f3-bac9-424e-9f8c-e5c816c71db9"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Responsável",
                            Nome = "CadastrarResponsavel",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("af411c34-84ca-4fe1-9a9a-c09677f75d38"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Atualizar Responsável",
                            Nome = "AtualizarResponsavel",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("757c0627-9e30-40b5-85b8-04935c037d40"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Responsável",
                            Nome = "DeletarResponsavel",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2319d23c-9f81-42d1-8529-37a91a307ea7"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Consultar Aluno",
                            Nome = "ConsultarAluno",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("21fb4244-6039-459a-9f34-f491564f76d5"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Cadastrar Aluno",
                            Nome = "CadastrarAluno",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c11831f3-752d-44ce-a6ce-8c2e5fb177e6"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Atualizar Aluno",
                            Nome = "AtualizarAluno",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b43414d1-7e22-4636-98a3-7db191b509c4"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Descricao = "Deletar Aluno",
                            Nome = "DeletarAluno",
                            TipoUsuario = 0,
                            UnidadeAcessoId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.PermissaoGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("PermissaoGrupo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fffa2477-10a8-4955-9c4a-4b0251210b9d"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("460868e7-6b2b-4d8d-a56c-c096e236ddcd")
                        },
                        new
                        {
                            Id = new Guid("25ae9b26-d36f-4eb6-870a-4ad5272f3821"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("ec7d9981-5e78-4b3e-95f4-27958c0d4f66")
                        },
                        new
                        {
                            Id = new Guid("ebb1ceed-cdbf-4081-80ad-bdbd30f5875f"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("9382b87b-1401-4b51-bdfa-5bbaca41cb78")
                        },
                        new
                        {
                            Id = new Guid("b4a4642f-c59d-4ba4-8b85-339ef9a1d784"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("fd1324d8-5c31-4fdb-b629-b9755b3dc9ef")
                        },
                        new
                        {
                            Id = new Guid("1a084f91-86d1-4dfc-9a8e-04043db99e83"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("d4a39d1c-c7fd-41de-aa56-cf269f723002")
                        },
                        new
                        {
                            Id = new Guid("45a1a818-4d5d-4f80-8e7c-9957746bda46"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("7298e2ae-c46a-47ff-9ae5-d9620e0b288c")
                        },
                        new
                        {
                            Id = new Guid("407d89aa-6ee5-43a5-b868-66319b28d48a"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("68943f93-71af-4368-a57a-9f0b2d77f56e")
                        },
                        new
                        {
                            Id = new Guid("96042d19-e425-4096-86d1-6a816b0a389d"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("59666e7e-320f-44e2-9d14-97a131a78618")
                        },
                        new
                        {
                            Id = new Guid("81289871-b778-4e86-a009-2bca85468124"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("1e7d4555-be2f-421f-9fee-7c22f4326b60")
                        },
                        new
                        {
                            Id = new Guid("d042d1c9-36dd-4336-9a51-08096df747d5"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("f9114f1d-d1a0-4afa-b1bc-b8137a5b7640")
                        },
                        new
                        {
                            Id = new Guid("42c698ee-8eb5-4f9e-b13b-e7b4812c0320"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("ed2b7a70-90ae-44d4-b81e-506ef914c34c")
                        },
                        new
                        {
                            Id = new Guid("9d2dce8c-b79a-41d5-9df9-a3a8c0c7b060"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("684fd917-ca64-47a2-b5ea-5cf801a36a93")
                        },
                        new
                        {
                            Id = new Guid("25a377c4-7ec7-48f6-8973-a5fe5bfe5fe7"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("36b7322e-42a9-4828-9d84-d0dbfac3e27d")
                        },
                        new
                        {
                            Id = new Guid("1982b23d-6602-4ef9-b55d-6607aa83e5e5"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("4b31bfdb-790b-408e-b8d6-60397cb489c3")
                        },
                        new
                        {
                            Id = new Guid("1ff30662-6cb9-4971-ad7d-883264b939a6"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("9bb40f14-1ea7-4c84-a3a8-48cffb7e921f")
                        },
                        new
                        {
                            Id = new Guid("5b4b6ded-2693-4a14-b08b-0ed3c3b8f164"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("1a31dfcf-234b-4745-9c3b-2f41bbd3021d")
                        },
                        new
                        {
                            Id = new Guid("5bf94d8e-947a-43b3-8f7c-eecaed54fd54"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("1e8731b6-338d-4f3f-9ebb-045a2b18156a")
                        },
                        new
                        {
                            Id = new Guid("62eb8a29-cbaa-4319-beff-4a18a57f5571"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("e1f523a6-0217-44a8-a649-a0d1b22505c3")
                        },
                        new
                        {
                            Id = new Guid("170e5d4a-2637-48ee-abef-f37f3c25f602"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("b3ea5dcd-b6cf-48d5-90a3-6a0972cc72ad")
                        },
                        new
                        {
                            Id = new Guid("50cc28ba-4822-4980-928f-4cfd1bcf0f6e"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("8490dc09-50cd-42d4-87c6-b70ec7e488d5")
                        },
                        new
                        {
                            Id = new Guid("b6b45de4-6cf7-41b1-ad4b-3e12d3bc6b1b"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("71f80eef-d10e-41d2-a803-e5b0f563b0da")
                        },
                        new
                        {
                            Id = new Guid("6debb8af-f32c-4fa1-899b-ef26f2401fbd"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("f5c0ded7-355f-4026-9141-ad97e6f8ba5e")
                        },
                        new
                        {
                            Id = new Guid("4048f7f8-897e-400d-9615-ddda89c8c2d4"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("d13364f3-bac9-424e-9f8c-e5c816c71db9")
                        },
                        new
                        {
                            Id = new Guid("9bf81381-6ff8-4e89-b636-a607684960bc"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("af411c34-84ca-4fe1-9a9a-c09677f75d38")
                        },
                        new
                        {
                            Id = new Guid("5da15091-299e-49b2-9c5a-6dcb1fae7376"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("757c0627-9e30-40b5-85b8-04935c037d40")
                        },
                        new
                        {
                            Id = new Guid("8559a05d-afe3-432c-8d5d-00ead9b318eb"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("2319d23c-9f81-42d1-8529-37a91a307ea7")
                        },
                        new
                        {
                            Id = new Guid("75c2f6b8-a2ae-4f62-af7d-1acd93ed5711"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("21fb4244-6039-459a-9f34-f491564f76d5")
                        },
                        new
                        {
                            Id = new Guid("d766e2e4-c0e1-46a6-9185-32356c616dfd"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("c11831f3-752d-44ce-a6ce-8c2e5fb177e6")
                        },
                        new
                        {
                            Id = new Guid("6b86ef2d-edad-4784-8fb5-da69348d5737"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            GrupoId = new Guid("2da65b7f-5238-4fec-a9cc-1cf3316dec11"),
                            PermissaoId = new Guid("b43414d1-7e22-4636-98a3-7db191b509c4")
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.PermissaoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AspNetUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AspNetUsersId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("PermissaoUsuario");
                });

            modelBuilder.Entity("Core.Entities.Security.UnidadeAcesso", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<Guid?>("UsuarioIdUltimaAtualizacao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UnidadeAcesso");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a89ee7c9-01c5-4387-95ab-dfef58eac490"),
                            Ativo = true,
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Nome = "Unidade de Acesso para Testes"
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.UnidadeAcessoModulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("UnidadeAcessoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeAcessoId");

                    b.ToTable("UnidadeAcessoModulo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a78804c-fd66-4dca-ab3e-439811e46b93"),
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Modulo = "Configuracao",
                            UnidadeAcessoId = new Guid("a89ee7c9-01c5-4387-95ab-dfef58eac490")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Core.Entities.Security.AspNetUsers", b =>
                {
                    b.HasBaseType("Core.Entities.Security.ApplicationUser");

                    b.Property<Guid?>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GrupoId");

                    b.HasDiscriminator().HasValue("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97e7e460-fc41-4924-ac91-c1afe5813559"),
                            AccessFailedCount = 0,
                            Ativo = true,
                            ConcurrencyStamp = "5b4a83c8-9ea4-4689-ad5e-cc316bcfbed7",
                            DataCriacao = new DateTime(2021, 1, 24, 18, 6, 7, 725, DateTimeKind.Local),
                            Deletado = false,
                            Discriminator = "AspNetUsers",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            Nome = "Administrador",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEPAZnzRwLn+hRi5+ehZKG33K7YXXEv+ftKZHbrV+smfDMypbHbVSqYVakJG+MUP3zA==",
                            PhoneNumberConfirmed = false,
                            PrimeiroLogin = false,
                            QuantidadeLogin = 0,
                            QuantidadePrimeiroAcesso = 0,
                            SecurityStamp = "OXVDUJPW7QZIQ77MY2UR44NVKABXHWQZ",
                            TermoUso = true,
                            TipoUsuario = 0,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Core.Entities.Security.AspNetUsersRefreshToken", b =>
                {
                    b.HasOne("Core.Entities.Security.AspNetUsers", "AspNetUsers")
                        .WithMany("AspNetUsersRefreshToken")
                        .HasForeignKey("AspNetUsersId")
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.Auditoria", b =>
                {
                    b.HasOne("Core.Entities.Security.AspNetUsers", "AspNetUsers")
                        .WithMany("Audit")
                        .HasForeignKey("AspNetUsersId");
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoAspNetUsers", b =>
                {
                    b.HasOne("Core.Entities.Security.AspNetUsers", "AspNetUsers")
                        .WithMany("GrupoAspNetUsers")
                        .HasForeignKey("AspNetUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Security.Grupo", "Grupo")
                        .WithMany("GrupoAspNetUsers")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoModulo", b =>
                {
                    b.HasOne("Core.Entities.Security.Grupo", "Grupo")
                        .WithMany("GrupoModulo")
                        .HasForeignKey("GrupoId")
                        .HasConstraintName("FK_GrupoModulos_Grupo_GrupoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.GrupoUnidadeAcesso", b =>
                {
                    b.HasOne("Core.Entities.Security.UnidadeAcesso", "UnidadeAcesso")
                        .WithMany("GrupoUnidadeAcesso")
                        .HasForeignKey("UnidadeAcessoId")
                        .HasConstraintName("FK_GrupoUnidadeAcessos_UnidadeAcesso_UnidadeAcessoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.ParametroSistema", b =>
                {
                    b.HasOne("Core.Entities.Security.AspNetUsers", "AspNetUsers")
                        .WithMany("ParametroSistema")
                        .HasForeignKey("AspNetUsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Entities.Security.PermissaoGrupo", b =>
                {
                    b.HasOne("Core.Entities.Security.Grupo", "Grupo")
                        .WithMany("PermissaoGrupo")
                        .HasForeignKey("GrupoId")
                        .IsRequired();

                    b.HasOne("Core.Entities.Security.Permissao", "Permissao")
                        .WithMany("PermissaoGrupo")
                        .HasForeignKey("PermissaoId")
                        .HasConstraintName("FK_PermissaoGrupos_Permissao_PermissaoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.PermissaoUsuario", b =>
                {
                    b.HasOne("Core.Entities.Security.AspNetUsers", "AspNetUsers")
                        .WithMany("PermissaoUsuario")
                        .HasForeignKey("AspNetUsersId")
                        .IsRequired();

                    b.HasOne("Core.Entities.Security.Permissao", "Permissao")
                        .WithMany("PermissaoUsuario")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.UnidadeAcessoModulo", b =>
                {
                    b.HasOne("Core.Entities.Security.UnidadeAcesso", "UnidadeAcesso")
                        .WithMany("UnidadeAcessoModulo")
                        .HasForeignKey("UnidadeAcessoId")
                        .HasConstraintName("FK_UnidadeAcessoModulos_UnidadeAcesso_UnidadeAcessoId")
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Core.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Core.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Core.Entities.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Security.AspNetUsers", b =>
                {
                    b.HasOne("Core.Entities.Security.Grupo", null)
                        .WithMany("AspNetUsers")
                        .HasForeignKey("GrupoId");
                });
#pragma warning restore 612, 618
        }
    }
}
